name: Create Github Release
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build-win:
    name: Build Game for Windows
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Unity Build CI for Windows
        uses: ./.github/actions/build
        with:
          targetPlatform: StandaloneWindows
          unityLicense: ${{ secrets.UNITY_LICENSE }}
          unityEmail: ${{ secrets.UNITY_EMAIL }}
          unityPassword: ${{ secrets.UNITY_PASSWORD }}

  build-macos:
    name: Build Game for MacOS
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Unity Build CI for MacOS
        uses: ./.github/actions/build
        with:
          targetPlatform: StandaloneOSX
          unityLicense: ${{ secrets.UNITY_LICENSE }}
          unityEmail: ${{ secrets.UNITY_EMAIL }}
          unityPassword: ${{ secrets.UNITY_PASSWORD }}

  installer-win:
    name: Build Installer for Windows
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    needs: build-win
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download Windows Build Artifact
      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-StandaloneWindows
          path: InnoBuild

      - name: Compile .iss to .exe Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: Inno/inno.iss
          options: /O+

      # Output
      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: InstallerStandaloneWindows
          path: Inno/InstallerStandaloneWindows.exe

  installer-mac:
    name: Build Installer for MacOS
    runs-on: macos-latest
    if: github.event.pull_request.merged == true
    needs: build-macos
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download MacOS Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-StandaloneOSX
          path: MacBuild

      - name: Create DMG Installer
        run: |
          hdiutil create -volname "GameInstaller" -srcfolder MacBuild -ov -format UDZO GameEngineeringStudy.dmg

      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: InstallerStandaloneOSX
          path: GameEngineeringStudy.dmg

  create-release:
    name: Create Release
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [build-win, build-macos, installer-win]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-StandaloneWindows
          path: build-StandaloneWindows

      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: InstallerStandaloneWindows
          path: Inno

      - name: Download MacOS Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-StandaloneOSX
          path: build-StandaloneOSX

      - name: Download MacOS Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: InstallerStandaloneOSX
          path: ./GameEngineeringStudy.dmg

      - name: Create GitHub Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Zip Windows Build
        run: zip -r build-StandaloneWindows.zip build-StandaloneWindows

      - name: Zip MacOS Build
        run: zip -r build-StandaloneOSX.zip build-StandaloneOSX

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-StandaloneWindows.zip
          asset_name: GameEngineeringStudy-StandaloneWindows.zip
          asset_content_type: application/zip

      - name: Upload Windows Installer to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Inno/InstallerStandaloneWindows.exe
          asset_name: GameEngineeringStudyInstaller.exe
          asset_content_type: application/octet-stream

      - name: Upload MacOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-StandaloneOSX.zip
          asset_name: GameEngineeringStudy-StandaloneOSX.zip
          asset_content_type: application/zip

      - name: Upload MacOS Installer to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: GameInstaller.dmg
          asset_name: GameEngineeringStudyInstaller.dmg
          asset_content_type: application/octet-stream
