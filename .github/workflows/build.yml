# from: https://game.ci/docs/
# targetPlatform values: https://docs.unity3d.com/ScriptReference/BuildTarget.html

name: Unity Build CI
on:
  push:
    branches:
      - inno-ci
  #     - develop
  #     - main
  # pull_request:
  #   branches:
  #     - develop
  #     - main

jobs:
  # Build for Windows (32-Bit)
  build-win:
    name: Build Game for Windows
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        # ! Enable this if LFS is added
        # ! with:
        # !   lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows

      # Output
      - name: Upload Build as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-win
          path: build

  installer-win:
    name: Build Installer for Windows
    runs-on: windows-latest
    needs: build-win
    continue-on-error: true
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download Windows Build Artifact
      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-win
          path: build

      - name: Compile .iss to .exe Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: Inno/inno.iss
          options: /O+

      # Output
      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: installer-win
          path: Inno/installer_win.exe

  # Build for MacOS
  build-ios:
    name: Build Game for MacOS
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        # ! Enable this if LFS is added
        # with:
        #   lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneOSX

      # Output
      - name: Upload Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos
          path: build

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-win, installer-win, build-ios]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-win
          path: build-win

      - name: Download Installer Artifact
        uses: actions/download-artifact@v3
        with:
          name: installer-win
          path: Inno

      - name: Download MacOS Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-macos
          path: build-macos

      - name: Create GitHub Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-win
          asset_name: build-win.zip
          asset_content_type: application/zip

      - name: Upload Installer to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Inno/installer_win.exe
          asset_name: installer-win.exe
          asset_content_type: application/octet-stream

      - name: Upload MacOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-macos
          asset_name: build-macos.zip
          asset_content_type: application/zip
